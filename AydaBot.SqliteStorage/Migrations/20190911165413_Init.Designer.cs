// <auto-generated />
using System;
using AydaBot.SqliteStorage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AydaBot.SqliteStorage.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190911165413_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("AydaBot.SqliteStorage.Serial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Name2");

                    b.HasKey("Id");

                    b.ToTable("Serials");
                });

            modelBuilder.Entity("AydaBot.SqliteStorage.SerialMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Message");

                    b.Property<int>("SerialId");

                    b.HasKey("Id");

                    b.HasIndex("SerialId");

                    b.ToTable("SerialMessages");
                });

            modelBuilder.Entity("AydaBot.SqliteStorage.Subscription", b =>
                {
                    b.Property<int>("SerialId");

                    b.Property<string>("UserId");

                    b.Property<DateTime>("Notified");

                    b.HasKey("SerialId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("AydaBot.SqliteStorage.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("Conversation");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AydaBot.SqliteStorage.SerialMessage", b =>
                {
                    b.HasOne("AydaBot.SqliteStorage.Serial", "Serial")
                        .WithMany("SerialMessages")
                        .HasForeignKey("SerialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AydaBot.SqliteStorage.Subscription", b =>
                {
                    b.HasOne("AydaBot.SqliteStorage.Serial", "Serial")
                        .WithMany()
                        .HasForeignKey("SerialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AydaBot.SqliteStorage.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
